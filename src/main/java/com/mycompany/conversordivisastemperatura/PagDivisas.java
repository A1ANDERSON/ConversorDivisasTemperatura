/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.conversordivisastemperatura;

/**
 *
 * @author anderson
 */
public class PagDivisas extends javax.swing.JPanel {

    /**
     * Creates new form PagDivisas
     */
    public PagDivisas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIngresar = new javax.swing.JTextField();
        combo = new javax.swing.JComboBox<>();
        btnConvertir = new javax.swing.JButton();
        txtresultado = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        bg.setBackground(new java.awt.Color(25, 25, 25));
        bg.setPreferredSize(new java.awt.Dimension(510, 410));

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Conversor de Divisas en tiempo real con API");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cantidad");

        txtIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIngresarActionPerformed(evt);
            }
        });

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Peso Colombiano (COP) a Dólar Americano (MXN)", "Peso Colombiano (COP) a Euros (EUR)", "Peso Colombiano (COP) a Libras Esterlinas (GBP)", "Peso Colombiano (COP) a Yen Japonés (JPY)", "Peso Colombiano (COP) a Won surcoreano (KRW)", "Dolar Americano (USD) a Peso Colombiano (COP)", "Euros (EUR) a Peso Colombiano (COP)", "Libras Esterlinas (GBP) a Peso Colombiano (COP)", "Yen Japonés (JPY) a Peso Colombiano (COP)", "Won Surcoreano (KRW) a Peso Colombiano (COP)" }));

        btnConvertir.setText("Convertir");
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Resultado");

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtIngresar, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                        .addComponent(txtresultado)))
                .addGap(155, 155, 155))
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(btnConvertir)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(61, 61, 61)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConvertir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtresultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIngresarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIngresarActionPerformed

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
        // TODO add your handling code here:
        String sourceCurrency = null;
        String targetCurrency = null;

        double numero = Double.parseDouble(txtIngresar.getText());
        double resultado;

        String selectedItem = combo.getSelectedItem().toString();

        switch (selectedItem) {
            case "Peso Colombiano (COP) a Dólar Americano (USD)":
                sourceCurrency = "COP";
                targetCurrency = "USD";
                ConsumoApi consumoApi = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Peso Colombiano (COP) a Euros (EUR)":
                sourceCurrency = "COP";
                targetCurrency = "EUR";
                ConsumoApi consumoApi1 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi1.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Peso Colombiano (COP) a Libras Esterlinas (GBP)":
                sourceCurrency = "COP";
                targetCurrency = "GBP";
                ConsumoApi consumoApi2 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi2.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Peso Colombiano (COP) a Yen Japonés (JPY)":
                sourceCurrency = "COP";
                targetCurrency = "JPY";
                ConsumoApi consumoApi3 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi3.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Peso Colombiano (COP) a Won surcoreano (KRW)":
                sourceCurrency = "COP";
                targetCurrency = "KRW";
                ConsumoApi consumoApi4 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi4.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Dolar Americano (USD) a Peso Colombiano (COP)":
                sourceCurrency = "USD";
                targetCurrency = "COP";
                ConsumoApi consumoApi5 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi5.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Euros (EUR) a Peso Colombiano (COP)":
                sourceCurrency = "EUR";
                targetCurrency = "COP";
                ConsumoApi consumoApi6 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi6.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Libras Esterlinas (GBP) a Peso Colombiano (COP)":
                sourceCurrency = "GBP";
                targetCurrency = "COP";
                ConsumoApi consumoApi7 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi7.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Yen Japonés (JPY) a Peso Colombiano (COP)":
                sourceCurrency = "JPY";
                targetCurrency = "COP";
                ConsumoApi consumoApi8 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi8.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            case "Won Surcoreano (KRW) a Peso Colombiano (COP)":
                sourceCurrency = "KRW";
                targetCurrency = "COP";
                ConsumoApi consumoApi9 = new ConsumoApi(sourceCurrency, targetCurrency);
                resultado = consumoApi9.convert(numero);
                txtresultado.setText(String.valueOf(resultado + " " + targetCurrency));
                break;
            
            

        }
    }//GEN-LAST:event_btnConvertirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnConvertir;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtIngresar;
    private javax.swing.JTextField txtresultado;
    // End of variables declaration//GEN-END:variables
}
